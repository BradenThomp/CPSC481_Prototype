@page "/OnHold"
@layout MainLayout
@inject UserStore UserStore
@inject LibraryItemStore LibraryItemStore
@inject LoginService LoginService;
@inject IToastService toastService



<head>
    <link rel="stylesheet" href="..\wwwroot\css\app.css">
    <link rel="stylesheet" href="http://getbootstrap.com/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css">
    <link href="_content/Blazorise/blazorise.css" rel="stylesheet" />
    <link href="_content/Blazorise.Bootstrap/blazorise.bootstrap.css" rel="stylesheet" />
</head>

    <!-- Page content -->
    <div class="row">
        <div class="col-12">
            <div class="px-5">
                <h2>Items Currently on Hold for @User.Name</h2>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">

            <div class="col-12">
                @foreach (LibraryItem item in onhold)
                {
                    <div class="card mb-3 card-style" style="width: 101%;">
                        <div class="row no-gutters">
                            <div class="col-md-2">
                                <div class="img-responsive center-block d-block mx-auto">
                                    <img src=@item.ImageSource class="card-img" alt="...">
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="card-body">
                                    <h2 class="display-5">@item.Title</h2>
                                    <h3 class="h3">@item.Author</h3>
                                    <h6 class="h6">@item.Length @item.Format</h6>
                                    @if (item.CopiesAvailable <= 0) {
                                        <h6 class="h6">Available for pickup  March 13th-March 20th, 2008 </h6>
                                    }
                                    else
                                    {
                                        <h6 class="h6">Pick up by March 8th, 2008 </h6>
                                    
                                    }

                                    &nbsp;
                                    <p>
                                        <a class="btn btn-outline-dark" data-toggle="collapse" href="#collapseExample-@item.Id" role="button" aria-expanded="false" aria-controls="collapseExample">
                                            + Expand
                                        </a>
                                    </p>
                                    <div class="collapse" id="collapseExample-@item.Id">
                                        <div class="card card-body">
                                            @item.Summary
                                        </div>
                                    </div>
                                    <p class="card-text"><small class="text-muted">@item.CopiesAvailable Copies Available</small></p>
                                    <div style="text-align: left;">
                                        <a href="#" class="btn button-26 m-1"  role="button" @onclick="(() => removeItemFromHold(item))" @onclick:preventDefault>Remove From Hold</a>
                                        @if (wishlistStatus(item))
                                        {
                                        <a href="#" class="btn button-26 m-1"  role="button" @onclick="(() => removeFromWishlist(item))" @onclick:preventDefault>Remove From Wishlist</a>
                                        }
                                        @if (!wishlistStatus(item))
                                        {
                                        <a href="#" class="btn button-26 m-1"  role="button" @onclick="(() => addToWishlist(item))" @onclick:preventDefault>Add To Wishlist</a>
                                        }
                                    <a href="iteminfo/@item.Id" class="btn button-26 m-1"  role="button">Info</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


<style>
    .card-style {
        background-color: #eaf4f4;
    }

    .card-img {
        width: 200px;
        height: 300px;
        object-fit: fill;
        padding-top: 10px;
        padding-left: 10px;
    }

    .button-26 {
        background: #00303f;
        border: 1px solid #00303f;
        border-radius: 6px;
        box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;
        box-sizing: border-box;
        color: white;
        cursor: pointer;
        display: inline-block;
        font-family: nunito,roboto,proxima-nova,"proxima nova",sans-serif;
        font-size: 16px;
        font-weight: 500;
        line-height: 16px;
        min-height: 40px;
        outline: 0;
        padding: 12px 14px;
        text-align: center;
        text-rendering: geometricprecision;
        text-transform: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: middle;
    }

        .button-26:hover,
        .button-26:active {
            background-color: initial;
            background-position: 0 0;
            color: #00303f;
        }

        .button-26:active {
            opacity: .5;
        }
</style>

@code{
    [Parameter]
    public string id { get; set; }

    public User User { get; set; }

    public List<LibraryItem> onhold { get; set; }


    protected override void OnParametersSet()
    {
        User = LoginService.CurrentUser;

        onhold = UserStore.GetOnHold(User);
    }

    void removeItemFromHold(LibraryItem item)
    {
        bool a = UserStore.removeFromHold(item, User);
        toastService.ShowSuccess("Removed " + item.Title + " from on hold.");
    }

    void addToWishlist(LibraryItem item)
    {
        UserStore.addToWishlist(item, User);
        toastService.ShowSuccess("Added " + item.Title + " to the wishlist.");

    }

    void removeFromWishlist (LibraryItem item)
    {
        UserStore.removeFromWishlist(item, User);
        toastService.ShowSuccess("Removed " + item.Title + " from wishlist.");
    }

    public bool wishlistStatus(LibraryItem item)
    {
        if (UserStore.isInWishlist(item, User))
        {
            return true;
        }
        else
        {
            return false;
        }

    }

}
@page "/searchresults/{showSearch}"
@inherits LayoutComponentBase
@inject LibraryItemStore LibraryItemStore
@inject NavigationManager UriHelper

<PageTitle>Search Results Page</PageTitle>
<!-- Side navigation -->

<div class="row">
    <div class="col-2">
        @if (width == 0)
        {
            <button class="openbtn" @onclick="OpenNav">&#9776; Filters</button>
        }
    </div>
    <div class="col-8">
        <div class="px-4">
            <h2>@results.Count Results for "@showSearch"</h2>
        </div>
    </div>
    <div class="col-2">
        <div class="dropdown">
            <label class="btn-label">Sort By:</label>
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Relevance
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#">Newest</a>
                <a class="dropdown-item" href="#">Oldest</a>
            </div>
        </div>
    </div>
</div>
&nbsp;
<div class="row">
    <div style="@sidebarWidth" class="filters">
        <a class="closebtn" @onclick="CloseNav">&times;</a>
        <br />
        <br />
        <h3><a href="" @onclick=@(() => showAll()) @onclick:preventDefault><u>Reset Filters</u></a></h3>
        <br />
        <a>Media Type:</a>
        @*<div class="indent">
                <a href="#" >CD (@cdCount)</a>
            </div>*@
        <div class="indent">
            <a href="" @onclick=@(() => setFormatFilter(ItemType.Movie)) @onclick:preventDefault>Movie (@movieCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setFormatFilter(ItemType.Book)) @onclick:preventDefault>Book (@bookCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setFormatFilter(ItemType.VideoGame)) @onclick:preventDefault>Video Game (@videogameCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setFormatFilter(ItemType.Music)) @onclick:preventDefault>Music (@musicCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setFormatFilter(ItemType.TVShow)) @onclick:preventDefault>TV Show (@tvShowCount)</a>
        </div>
        <hr style="width:50%;text-align:left;margin-left:15px">
        <a>Classification:</a>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Fiction")) @onclick:preventDefault>Fiction (@fictionCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Non-fiction")) @onclick:preventDefault>Non-fiction (@nonfictionCount)</a>
        </div>
        <hr style="width:50%;text-align:left;margin-left:15px">
        <a>Genre:</a>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Fantasy")) @onclick:preventDefault>Fantasy (@fantasyCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Action")) @onclick:preventDefault>Action (@actionCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Adventure")) @onclick:preventDefault>Adventure (@adventureCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Children")) @onclick:preventDefault>Children (@childrenCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Teen")) @onclick:preventDefault>Teen (@teenCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Science Fiction")) @onclick:preventDefault>Sci-Fi (@scifiCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Romance")) @onclick:preventDefault>Romance (@romanceCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Mystery")) @onclick:preventDefault>Mystery (@mysteryCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Horror")) @onclick:preventDefault>Horror (@horrorCount)</a>
        </div>
        <div class="indent">
            <a href="" @onclick=@(() => setGenreFilter("Graphic Novel")) @onclick:preventDefault>Graphic Novel (@graphicNovelCount)</a>
        </div>

        <hr style="width:50%;text-align:left;margin-left:15px">
        <a>New to Library:</a>
        <div class="indent">
            <a href="#">Last 30 Days (@new30Count)</a>
        </div>
        <div class="indent">
            <a href="#">Last 90 Days (@new90Count)</a>
        </div>
        <div class="indent">
            <a href="#">Last 180 Days (@new180Count)</a>
        </div>
        <div class="indent">
            <a href="#">Last 360+ Days (@new360plusCount)</a>
        </div>
    </div>
</div>
<!-- Page content -->
@if (results.Count > 0)
{
    int i = 0;
    <div style="@main">
        &nbsp;
        <div class="container">
            <div class="row">
                <div class="col-12">
                    @foreach (var item in results)
                    {
                        if (!isVisible(item))
                            continue;

                        <div class="card mb-3 card-style" style="width: 101%;">
                            <div class="row no-gutters">
                                <div class="col-md-2">
                                    <div class="img-responsive center-block d-block mx-auto">
                                        <img src="@item.ImageSource" class="card-img" alt="...">
                                    </div>
                                </div>
                                <div class="col-md-10">
                                    <div class="card-body">
                                        <h2 class="display-5">@item.Title</h2>
                                        <h3 class="h3">@item.Author</h3>
                                        <h6 class="h6">@item.Length, @item.Format</h6>
                                        <h6 class="h6"> @item.Publisher - @item.PublicationDate</h6>
                                        &nbsp;
                                        <p>
                                            <a class="btn btn-outline-dark" data-toggle="collapse" href="#collapseExample_@i" role="button" aria-expanded="false" aria-controls="#collapseExample">
                                                + Expand
                                            </a>
                                        </p>
                                        <div class="collapse" id="collapseExample_@i">
                                            <div class="card card-body card-style">
                                                @item.Summary
                                            </div>
                                        </div>
                                        <p class="card-text"><small class="text-muted">@item.CopiesAvailable Copies Available</small></p>
                                        <div style="text-align: left;">
                                            <a href="#" class="btn btn-secondary" style="background-color: #6b9080" role="button">Hold</a>
                                            <a href="#" class="btn btn-secondary" style="background-color: #6b9080" role="button">Wishlist</a>
                                            <a href="iteminfo/@item.Id" class="btn btn-secondary" style="background-color: #6b9080" role="button">Info</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        i++;
                    }
                </div>
            </div>
        </div>
    </div>
}


<style>
    .searchHeader {
        padding-right: 50px;
    }

    .card-img {
        width: 200px;
        height: 300px;
        object-fit: fill;
        padding-top: 15px;
        padding-left: 10px;
    }
    /*Sidebar Text indentation*/
    .indent {
        text-indent: 25px
    }
    /*Side bar settings*/
    .filters {
        width: 200px; /* Set the width of the sidebar */
        position: fixed;
        max-height: calc(100vh - 13rem);
        overflow-y: auto;
        z-index: 1; /* Stay on top */
        top: 200px; /* Stay at the top */
        left: 0px;
        background-color: transparent;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 20px;
        border-right: 1px groove;
        transition: 0.5s;
    }
        /*Filter X button*/
        .filters .closebtn {
            position: absolute;
            top: 0;
            right: 25px;
            font-size: 36px;
            margin-left: 50px;
        }
    /*Filter enable button*/
    .openbtn {
        font-size: 20px;
        cursor: pointer;
        background-color: #f6fff8;
        color: black;
        padding-left: 26px;
        border: none;
    }
    /* The navigation menu links */
    .filters a {
        padding: 6px 8px 6px 16px;
        text-decoration: none;
        font-size: 16px;
        color: black;
        display: block;
    }
        /* When you mouse over the navigation links, change their color */
        .filters a:hover {
            color: #f1f1f1;
        }

    #main {
        transition: margin-left .5s; /* If you want a transition effect */
        padding: 20px;
    }

    /* Style page content */
    .main {
        margin-left: 200px; /* Same as the width of the sidebar */
        padding: 0px 10px;
    }

    .card-style {
        background-color: #eaf4f4
    }
</style>

@code {
    string filter;
    int width = 0;
    string sidebarWidth => $"width: {width}px;";
    string main => $"margin-left: {width}px;";
    void OpenNav() => width = 250;
    void CloseNav() => width = 0;
    [Parameter]
    public string showSearch { get; set; }
    public LibraryItem Item { get; set; }
    private List<LibraryItem> results;
    int result = 0;
    //int cdCount = 0;
    int musicCount = 0;
    int movieCount = 0;
    int bookCount = 0;
    int videogameCount = 0;
    int tvShowCount = 0;
    int fictionCount = 0;
    int nonfictionCount = 0;
    int fantasyCount = 0;
    int actionCount = 0;
    int adventureCount = 0;
    int childrenCount = 0;
    int teenCount = 0;
    int scifiCount = 0;
    int romanceCount = 0;
    int mysteryCount = 0;
    int horrorCount = 0;
    int graphicNovelCount = 0;
    int new30Count = 0;
    int new90Count = 0;
    int new180Count = 0;
    int new360plusCount = 0;

    private void showAll()
    {
        filter = "";
    }

    private void setFormatFilter(ItemType type)
    {
        if (type == ItemType.Movie)
        {
            filter = "Movie";
        }
        else if (type == ItemType.Book)
        {
            filter = "Book";
        }
        else if (type == ItemType.VideoGame)
        {
            filter = "Video Game";
        }
        else if (type == ItemType.Music)
        {
            filter = "Music";
        }
    }

    private void setGenreFilter(string arg)
    {
        if (arg == "Fiction")
        {
            filter = "Fiction";
        }
        else if (arg == "Non-fiction")
        {
            filter = "Non-fiction";
        }
        else if (arg == "Fantasy")
        {
            filter = "Fantasy";
        }
        else if (arg == "Action")
        {
            filter = "Action";
        }
        else if (arg == "Adventure")
        {
            filter = "Adventure";
        }
        else if (arg == "Children")
        {
            filter = "Children";
        }
        else if (arg == "Teen")
        {
            filter = "Teen";
        }
        else if (arg == "Science Fiction")
        {
            filter = "Science Fiction";
        }
        else if (arg == "Romance")
        {
            filter = "Romance";
        }
        else if (arg == "Mystery")
        {
            filter = "Mystery";
        }
        else if (arg == "Horror")
        {
            filter = "Horror";
        }
        else if (arg == "Graphic Novel")
        {
            filter = "Graphic Novel";
        }
    }

    protected override void OnParametersSet()
    {
        results = LibraryItemStore.Search(showSearch);
        filterCount(results);
    }

    private bool isVisible(LibraryItem item)
    {
        if (string.IsNullOrEmpty(filter))
            return true;

        if (filter == "Movie" && item.ItemType == ItemType.Movie)
            return true;

        if (filter == "Book" && item.ItemType == ItemType.Book)
            return true;

        if (filter == "Video Game" && item.ItemType == ItemType.VideoGame)
            return true;

        if (filter == "Music" && item.ItemType == ItemType.Music)
            return true;

        foreach (var genre in item.Genres)
        {
            if (filter == "Fiction" && genre.StartsWith(filter))
            {
                return true;
            }
            else if (filter == "Non-fiction" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Fantasy" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Action" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Adventure" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Children" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Teen" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Science Fiction" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Romance" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Mystery" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Horror" && genre.Contains(filter))
            {
                return true;
            }
            else if (filter == "Graphic Novel" && genre.Contains(filter))
            {
                return true;
            }
        }
        return false;
    }

    private void filterCount(List<LibraryItem> results)
    {
        foreach (var item in results)
        {
            if (item.ItemType == ItemType.Book)
            {
                bookCount++;
            }
            else if (item.ItemType == ItemType.Music)
            {
                musicCount++;
            }
            else if (item.ItemType == ItemType.Movie)
            {
                movieCount++;
            }
            else if (item.ItemType == ItemType.TVShow)
            {
                tvShowCount++;
            }
            else if (item.ItemType == ItemType.VideoGame)
            {
                videogameCount++;
            }

            foreach (var innerlist in item.Genres)
            {
                if (innerlist.StartsWith("Fiction"))
                {
                    fictionCount++;
                }
                else if (innerlist.Contains("Science Fiction"))
                {
                    scifiCount++;
                }
                else if (innerlist.Contains("Non Fiction"))
                {
                    nonfictionCount++;
                }
                else if (innerlist.Contains("Fantasy"))
                {
                    fantasyCount++;
                }
                else if (innerlist.Contains("Action"))
                {
                    actionCount++;
                }
                else if (innerlist.Contains("Adventure"))
                {
                    adventureCount++;
                }
                else if (innerlist.Contains("Children") | innerlist.Contains("Kids"))
                {
                    childrenCount++;
                }
                else if (innerlist.Contains("Teen"))
                {
                    teenCount++;
                }
                else if (innerlist.Contains("Romance"))
                {
                    romanceCount++;
                }
                else if (innerlist.Contains("Mystery"))
                {
                    mysteryCount++;
                }
                else if (innerlist.Contains("Horror"))
                {
                    horrorCount++;
                }
                else if (innerlist.Contains("Graphic Novel"))
                {
                    graphicNovelCount++;
                }
            }
        }
    }
}




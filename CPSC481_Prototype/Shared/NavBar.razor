@implements IDisposable;
@inject IJSRuntime JS;
@inject LoginService LoginService;
@inject NavigationManager NavigationManager;
@inject NavigationManager UriHelper

<head>
    <link rel="stylesheet" type="text/css" href="Buttons.css" media=”screen” />
</head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">


<nav class="navbar navbar-expand-lg" style="background-color: #a4c3b2;">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <img src="images/librarylogo.png" alt="Logo" style="width:150px;">
        </a>
        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navbarCollapse">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-between" id="navbarCollapse">
            <div class="navbar-nav">
                <a type="button" class="btn button-25 m-1" href="#"> Home</a>
                <a type="button" class="btn button-25 m-1" href="/about"> About Us</a>
                <a type="button" class="btn button-25 m-1" href="/contact"> Contact/Help</a>

                <div class="dropdown">
                    <button class="btn button-25 dropdown-toggle m-1" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Explore
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="/books">Books</a>
                        <a class="dropdown-item" href="/movies">Movies</a>
                        <a class="dropdown-item" href="/music">Music</a>
                    </div>
                </div>

            </div>
        </div>


        @if (!LoginService.IsLoggedIn)
        {
            @if (currentRelativeUri != "/" && currentRelativeUri != "/#" && currentRelativeUri != "" && currentRelativeUri != "#")
            {
                <div class="d-flex">
                    <div class="input-group" style="width: 100%">
                        <input type="text" class="form-control" @onkeyup="@Enter" style="width: 500px; border: 1px solid #6b9080;" placeholder="Search: ex.Harry Potter, cooking, science fiction ..." @bind-value="searchTerm">
                        <button type="button" class="btn button-24"><i class="bi-search" @onclick="@searchItem"></i></button>
                    </div>
                </div>
            }
            <a class="btn button-24 m-2" @onclick="@ModalShow" data-toggle="modal">
                Login
            </a>
        }
        else
        {
            @if (currentRelativeUri != "/" && currentRelativeUri != "/#" && currentRelativeUri != "" && currentRelativeUri != "#")
            {
                <div class="d-flex">
                    <div class="input-group" style="width: 100%">
                        <input type="text" class="form-control" @onkeyup="@Enter" style="width: 300px; border: 1px solid #6b9080;" placeholder="Search: ex.Harry Potter, Cooking, ..." @bind-value="searchTerm">
                        <button type="button" class="btn button-24"><i class="bi-search" @onclick="@searchItem"></i></button>
                    </div>
                </div>
            }
            <a class="btn button-24 ms-3" href="/UserProfile"><span class="bi bi-person-fill"></span> </a>

            <a @onclick=@Logout class="btn button-24 ms-3 ml-auto">
                Logout
            </a>

            <div class="dropdown">
                <button class="btn button-24 dropdown-toggle ms-3 mr-1 ml-auto" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    My Items
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" href="\OnHold">On Hold</a>
                    <a class="dropdown-item" href="\Wishlist">Wishlist</a>
                    <a class="dropdown-item" href="#">Checked out</a>
                </div>
            </div>
        }
    </div>
</nav>


@if (showModal)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Sign in to your library account</h4>
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Library ID:</span>
                        </div>
                        <input @bind-value="id" type="text" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Password:</span>
                        </div>
                        <input @bind-value="password" type="password" class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                    </div>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">

                    <a type="button" class="btn button-25 ms-3 text-nowrap" @onclick="@ModalCancel">Forget password</a>
                    <button type="button" class="btn button-24" @onclick=@Login>Login</button>

                </div>

            </div>
        </div>
    </div>


}


@code {

    private string id { get; set; }
    private string password { get; set; }

    bool showModal = false;

    string currentRelativeUri { get; set; }

    private string searchTerm;

    private async Task searchItem()
    {
        UriHelper.NavigateTo($"searchresults/{searchTerm}");
    }

    protected async Task Enter(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Console.Write(searchTerm);
            UriHelper.NavigateTo($"searchresults/{searchTerm}");
        }
    }

    protected override void OnInitialized()
    {
        currentRelativeUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        Console.WriteLine(currentRelativeUri);
        NavigationManager.LocationChanged += LocationChanged;
        base.OnInitialized();
    }

    void LocationChanged(object sender, LocationChangedEventArgs e)
    {
        Console.WriteLine(currentRelativeUri);
        currentRelativeUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        StateHasChanged();
    }

    void ModalShow()
    {
        id = "";
        password = "";
        showModal = true;
    }
    void ModalCancel() => showModal = false;

    void Login()
    {
        if (LoginService.Login(id, password))
        {
            showModal = false;
        }
    }

    void Logout()
    {
        LoginService.Logout();
        NavigationManager.NavigateTo("/");
    }

    void IDisposable.Dispose()
    {
        NavigationManager.LocationChanged -= LocationChanged;
    }
}

<style>
    .button-24 {
        background: #6b9080;
        border: 1px solid #6b9080;
        border-radius: 6px;
        box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;
        box-sizing: border-box;
        color: #FFFFFF;
        cursor: pointer;
        display: inline-block;
        font-family: nunito,roboto,proxima-nova,"proxima nova",sans-serif;
        font-size: 16px;
        font-weight: 800;
        line-height: 16px;
        min-height: 40px;
        outline: 0;
        padding: 12px 14px;
        text-align: center;
        text-rendering: geometricprecision;
        text-transform: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: middle;
    }

        .button-24:hover,
        .button-24:active {
            background-color: grey;
            background-position: 0 0;
            color: white;
        }

        .button-24:active {
            opacity: .5;
        }


    button-25 {
        background: #7a9d96;
        border: 1px solid #7a9d96;
        box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;
        box-sizing: border-box;
        color: grey;
        cursor: pointer;
        display: inline-block;
        font-family: nunito,roboto,proxima-nova,"proxima nova",sans-serif;
        font-size: 12px;
        font-weight: 800;
        line-height: 14px;
        min-height: 30px;
        outline: 0;
        padding: 12px 14px;
        text-align: center;
        text-rendering: geometricprecision;
        text-transform: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
        vertical-align: middle;
    }

    .button-25:hover,
    .button-25:active {
        background-color: grey;
        background-position: 0 0;
        color: white;
    }

    .button-25:active {
        opacity: .5;
    }
</style>


